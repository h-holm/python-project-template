name: Promote Image

on:
  workflow_call:
    inputs:
      GITHUB_ENVIRONMENT:
        description: 'The GitHub environment to use'
        type: string
        required: true
        default: ''

concurrency:
  group: 'promote-${{ github.workflow }}-${{ github.ref || github.run_id }}'

defaults:
  run:
    shell: bash

# After an already-pushed image has been confirmed to work via the integration test and deployment, supplement the
# image with additional tags such as "latest", the branch name (e.g., "main") and the SemVer tag (if any).
jobs:
  promote-image:
    name: Promote Image
    runs-on: ubuntu-latest
    environment: ${{ inputs.GITHUB_ENVIRONMENT }}
    env:
      ARTIFACT_REGISTRY_HOSTNAME: "${{ secrets.GCP_LOCATION }}-docker.pkg.dev"
      ARTIFACT_REGISTRY_URL: "${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY_NAME }}"
      CICD_SERVICE_ACCOUNT_EMAIL: "${{ vars.GCP_CICD_SERVICE_ACCOUNT_NAME }}@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com"
      REPO_NAME: ${{ github.event.repository.name }}

    # The "Authenticate to Google Cloud" step requires these permissions to read and pass tokens.
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Authenticate to Google Cloud via Workload Identity Federation (WIF).
      - name: Authenticate to Google Cloud
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          service_account: ${{ env.CICD_SERVICE_ACCOUNT_EMAIL }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          token_format: access_token

      - name: Log In to Artifact Registry
        uses: docker/login-action@v3
        with:
          username: oauth2accesstoken
          password: ${{ steps.gcp-auth.outputs.access_token }}
          registry: ${{ env.ARTIFACT_REGISTRY_HOSTNAME }}

      - name: Generate Tags
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.ARTIFACT_REGISTRY_HOSTNAME }}/${{ env.ARTIFACT_REGISTRY_URL }}/${{ github.event.repository.name }}
          # Add the branch name and SemVer tags, as well as the "latest" tag if on the `main` branch.
          tags: |-
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Add Tags to image
        # Loop over the tags generated by the "Generate Tags" step and add them to the image in the registry.
        run: |-
          for tag in $(jq -r '.tags[]' <<< "$DOCKER_METADATA_OUTPUT_JSON"); do
            echo "Adding '$tag' tag to image..."
            gcloud artifacts docker tags add \
              "${{ env.ARTIFACT_REGISTRY_HOSTNAME }}/${{ env.ARTIFACT_REGISTRY_URL }}/${{ github.event.repository.name }}:sha-${{ github.sha }}" \
              "${tag}"
          done

name: Unit Tests

on:
  # Allow this workflow to be called from other workflows.
  workflow_call:

defaults:
  run:
    shell: bash

jobs:
  unit-tests:
    name: Python Unit Tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # There is no need for a matrix strategy for the Python version if we use Hatch for testing, because the
      # `tool.hatch.envs.test.matrix` entry in the `pyproject.toml` config defines all Python versions to test against.
      # The `vars.PYTHON_VERSION` we use here is therefore only used to `pip install` Hatch itself.
      - name: Set Up Python ${{ vars.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ vars.PYTHON_VERSION }}

      - name: Print Python Version
        run: python --version

      - name: Install Dependencies
        run: |-
          python -m pip install --upgrade pip
          python -m pip install hatch==${{ vars.HATCH_VERSION }}

      - name: Print Hatch Version
        run: hatch --version

      - name: Run Unit Tests
        run: |-
          hatch run test:test
